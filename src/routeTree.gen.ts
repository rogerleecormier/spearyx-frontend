/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root';
import { Route as DataRouteImport } from './routes/data';
import { Route as BrandStyleGuideRouteImport } from './routes/brand-style-guide';
import { Route as BrandCardsLibraryRouteImport } from './routes/brand-cards-library';
import { Route as IndexRouteImport } from './routes/index';

const DataRoute = DataRouteImport.update({
  id: '/data',
  path: '/data',
  getParentRoute: () => rootRouteImport,
} as any);
const BrandStyleGuideRoute = BrandStyleGuideRouteImport.update({
  id: '/brand-style-guide',
  path: '/brand-style-guide',
  getParentRoute: () => rootRouteImport,
} as any);
const BrandCardsLibraryRoute = BrandCardsLibraryRouteImport.update({
  id: '/brand-cards-library',
  path: '/brand-cards-library',
  getParentRoute: () => rootRouteImport,
} as any);
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any);

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute;
  '/brand-cards-library': typeof BrandCardsLibraryRoute;
  '/brand-style-guide': typeof BrandStyleGuideRoute;
  '/data': typeof DataRoute;
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute;
  '/brand-cards-library': typeof BrandCardsLibraryRoute;
  '/brand-style-guide': typeof BrandStyleGuideRoute;
  '/data': typeof DataRoute;
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport;
  '/': typeof IndexRoute;
  '/brand-cards-library': typeof BrandCardsLibraryRoute;
  '/brand-style-guide': typeof BrandStyleGuideRoute;
  '/data': typeof DataRoute;
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: '/' | '/brand-cards-library' | '/brand-style-guide' | '/data';
  fileRoutesByTo: FileRoutesByTo;
  to: '/' | '/brand-cards-library' | '/brand-style-guide' | '/data';
  id:
    | '__root__'
    | '/'
    | '/brand-cards-library'
    | '/brand-style-guide'
    | '/data';
  fileRoutesById: FileRoutesById;
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  BrandCardsLibraryRoute: typeof BrandCardsLibraryRoute;
  BrandStyleGuideRoute: typeof BrandStyleGuideRoute;
  DataRoute: typeof DataRoute;
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/data': {
      id: '/data';
      path: '/data';
      fullPath: '/data';
      preLoaderRoute: typeof DataRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/brand-style-guide': {
      id: '/brand-style-guide';
      path: '/brand-style-guide';
      fullPath: '/brand-style-guide';
      preLoaderRoute: typeof BrandStyleGuideRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/brand-cards-library': {
      id: '/brand-cards-library';
      path: '/brand-cards-library';
      fullPath: '/brand-cards-library';
      preLoaderRoute: typeof BrandCardsLibraryRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/': {
      id: '/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof IndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BrandCardsLibraryRoute: BrandCardsLibraryRoute,
  BrandStyleGuideRoute: BrandStyleGuideRoute,
  DataRoute: DataRoute,
};
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();
